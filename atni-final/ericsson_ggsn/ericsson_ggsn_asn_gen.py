# Auto-generated by asn1ate v.0.6.0 from ericssonlte.asn
# (last modified on 2018-01-17 00:31:07.862107)

from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful


class AFChargingIdentifier(univ.OctetString):
    pass


class AFRecordInformation(univ.Sequence):
    pass


AFRecordInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('aFChargingIdentifier', AFChargingIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class APNSelectionMode(univ.Enumerated):
    pass


APNSelectionMode.namedValues = namedval.NamedValues(
    ('mSorNetworkProvidedSubscriptionVerified', 0),
    ('mSProvidedSubscriptionNotVerified', 1),
    ('networkProvidedSubscriptionNotVerified', 2)
)


class AccessPointNameNI(char.IA5String):
    pass


AccessPointNameNI.subtypeSpec = constraint.ValueSizeConstraint(1, 63)


class ActiveTimeMethod(univ.Enumerated):
    pass


ActiveTimeMethod.namedValues = namedval.NamedValues(
    ('duration', 1),
    ('inactivityIncluded', 2),
    ('inactivity', 3),
    ('activePeriods', 4)
)


class AddressString(univ.OctetString):
    pass


AddressString.subtypeSpec = constraint.ValueSizeConstraint(1, 20)


class CallDuration(univ.Integer):
    pass


class CauseForRecClosing(univ.Integer):
    pass


CauseForRecClosing.namedValues = namedval.NamedValues(
    ('normalRelease', 0),
    ('abnormalRelease', 4),
    ('volumeLimit', 16),
    ('timeLimit', 17),
    ('servingNodeChange', 18),
    ('maxChangeCond', 19),
    ('rATChange', 22),
    ('mSTimeZoneChange', 23),
    ('sGSNPLMNIDChange', 24),
    ('managementInitRelease', 100),
    ('creditControlChange', 102),
    ('creditControlInitRelease', 104),
    ('policyControlInitRelease', 105)
)


class ChChSelectionMode(univ.Enumerated):
    pass


ChChSelectionMode.namedValues = namedval.NamedValues(
    ('servingNodeSupplied', 0),
    ('homeDefault', 3),
    ('roamingDefault', 4),
    ('visitingDefault', 5),
    ('radiusSupplied', 100),
    ('roamingClassBased', 101)
)


class ChangeCondition(univ.Enumerated):
    pass


ChangeCondition.namedValues = namedval.NamedValues(
    ('qoSChange', 0),
    ('tariffTime', 1),
    ('recordClosure', 2),
    ('failureHandlingContinueOngoing', 3),
    ('failureHandlingRetryandTerminateOngoing', 4),
    ('failureHandlingTerminateOngoing', 5)
)


class DataVolumeGPRS(univ.Integer):
    pass


class QoSInformation(univ.OctetString):
    pass


QoSInformation.subtypeSpec = constraint.ValueSizeConstraint(4, 17)


class EPCQoSInformation(univ.Sequence):
    pass


EPCQoSInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('qCI', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('maxRequestedBandwithUL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('maxRequestedBandwithDL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('guaranteedBitrateUL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('guaranteedBitrateDL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('aRP', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6)))
)


class TimeStamp(univ.OctetString):
    pass


TimeStamp.subtypeSpec = constraint.ValueSizeConstraint(9, 9)


class ChangeOfCharCondition(univ.Sequence):
    pass


ChangeOfCharCondition.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('qosNegotiated', QoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('dataVolumeGPRSUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('dataVolumeGPRSDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.NamedType('changeCondition', ChangeCondition().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('changeTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('ePCQoSInformation', EPCQoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9)))
)


class EventBasedChargingInformation(univ.Sequence):
    pass


EventBasedChargingInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('numberOfEvents', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('eventTimeStamps', univ.SequenceOf(componentType=TimeStamp()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class IPTextRepresentedAddress(univ.Choice):
    pass


IPTextRepresentedAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPTextV4Address', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(7, 15)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('iPTextV6Address', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(15, 45)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3)))
)


class IPBinaryAddress(univ.Choice):
    pass


IPBinaryAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPBinV4Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('iPBinV6Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class IPAddress(univ.Choice):
    pass


IPAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPBinaryAddress', IPBinaryAddress()),
    namedtype.NamedType('iPTextRepresentedAddress', IPTextRepresentedAddress())
)


class GSNAddress(IPAddress):
    pass


class RatingGroupId(univ.Integer):
    pass


class LocalSequenceNumber(univ.Integer):
    pass


LocalSequenceNumber.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class FreeFormatData(univ.OctetString):
    pass


FreeFormatData.subtypeSpec = constraint.ValueSizeConstraint(1, 160)


class FFDAppendIndicator(univ.Boolean):
    pass


class PSFurnishChargingInformation(univ.Sequence):
    pass


PSFurnishChargingInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('pSFreeFormatData', FreeFormatData().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('pSFFDAppendIndicator', FFDAppendIndicator().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class ServiceIdentifier(univ.Integer):
    pass


ServiceIdentifier.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class ResultCode(univ.Integer):
    pass


class ServiceConditionChange(univ.BitString):
    pass


ServiceConditionChange.namedValues = namedval.NamedValues(
    ('qoSChange', 0),
    ('sGSNChange', 1),
    ('sGSNPLMNIDChange', 2),
    ('tariffTimeSwitch', 3),
    ('pDPContextRelease', 4),
    ('rATChange', 5),
    ('serviceIdledOut', 6),
    ('serviceStop', 9),
    ('dCCATimeThresholdReached', 10),
    ('dCCAVolumeThresholdReached', 11),
    ('dCCAServiceSpecificUnitThresholdReached', 12),
    ('dCCATimeExhausted', 13),
    ('dCCAVolumeExhausted', 14),
    ('dCCAValidityTimeout', 15),
    ('reserved', 16),
    ('dCCAReauthorisationRequest', 17),
    ('dCCAContinueOngoingSession', 18),
    ('dCCARetryAndTerminateOngoingSession', 19),
    ('dCCATerminateOngoingSession', 20),
    ('cGI-SAIChange', 21),
    ('rAIChange', 22),
    ('dCCAServiceSpecificUnitExhausted', 23),
    ('recordClosure', 24),
    ('eCGIChange', 29),
    ('tAIChange', 30)
)


class FailureHandlingContinue(univ.Boolean):
    pass


class ChangeOfServiceCondition(univ.Sequence):
    pass


ChangeOfServiceCondition.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ratingGroup', RatingGroupId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('resultCode', ResultCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('timeOfFirstUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('timeOfLastUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('timeUsage', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.NamedType('serviceConditionChange', ServiceConditionChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('qoSInformationNeg', EPCQoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('sgsn-Address', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 10))),
    namedtype.OptionalNamedType('datavolumeFBCUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('datavolumeFBCDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('timeOfReport', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('failureHandlingContinue', FailureHandlingContinue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 16))),
    namedtype.OptionalNamedType('serviceIdentifier', ServiceIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 18))),
    namedtype.OptionalNamedType('aFRecordInformation', univ.SequenceOf(componentType=AFRecordInformation()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('eventBasedChargingInformation', EventBasedChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 21)))
)


class ChargingCharacteristics(univ.OctetString):
    pass


ChargingCharacteristics.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class ChargingID(univ.Integer):
    pass


ChargingID.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class CreditResultCode(univ.Integer):
    pass


class CreditRequestStatus(univ.Enumerated):
    pass


CreditRequestStatus.namedValues = namedval.NamedValues(
    ('unsent', 0),
    ('noAnswer', 1),
    ('failure', 2)
)


class CreditRequestType(univ.Enumerated):
    pass


CreditRequestType.namedValues = namedval.NamedValues(
    ('start', 0),
    ('interim', 1),
    ('stop', 2)
)


class CreditControlFailureReport(univ.Sequence):
    pass


CreditControlFailureReport.componentType = namedtype.NamedTypes(
    namedtype.NamedType('requestType', CreditRequestType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('requestStatus', CreditRequestStatus().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('resultCode', CreditResultCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('ccRequestNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12)))
)


class CreditControlInfo(univ.Sequence):
    pass


CreditControlInfo.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('creditControlFailureReport', CreditControlFailureReport().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 6))),
    namedtype.OptionalNamedType('creditControlSessionId', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('ccsRealm', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))
)


class DynamicAddressFlag(univ.Boolean):
    pass


class PDPType(univ.OctetString):
    pass


PDPType.subtypeSpec = constraint.ValueSizeConstraint(1, 2)


class ISDN_AddressString(AddressString):
    pass


class MSISDN(ISDN_AddressString):
    pass


class PLMN_Id(univ.OctetString):
    pass


PLMN_Id.subtypeSpec = constraint.ValueSizeConstraint(3, 3)


class RecordType(univ.Integer):
    pass


RecordType.namedValues = namedval.NamedValues(
    ('pGWRecord', 85)
)


class ETSIAddress(AddressString):
    pass


class PDPAddress(univ.Choice):
    pass


PDPAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPAddress', IPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),
    namedtype.NamedType('eTSIAddress', ETSIAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class RATType(univ.Integer):
    pass


RATType.subtypeSpec = constraint.ValueRangeConstraint(0, 255)


class ThreeGChangeOfServiceCondition(univ.Sequence):
    pass


ThreeGChangeOfServiceCondition.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ratingGroup', RatingGroupId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('resultCode', ResultCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('timeOfFirstUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('timeOfLastUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('timeUsage', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.NamedType('serviceConditionChange', ServiceConditionChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('qoSInformationNeg', QoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),
    namedtype.OptionalNamedType('sgsn-Address', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 10))),
    namedtype.OptionalNamedType('sGSNPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('datavolumeFBCUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('datavolumeFBCDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('timeOfReport', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('failureHandlingContinue', FailureHandlingContinue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 16))),
    namedtype.OptionalNamedType('serviceIdentifier', ServiceIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 18))),
    namedtype.OptionalNamedType('aFRecordInformation', univ.SequenceOf(componentType=univ.OctetString()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('eventBasedChargingInformation', EventBasedChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 21)))
)


class TBCD_STRING(univ.OctetString):
    pass


class IMEI(TBCD_STRING):
    pass


class PolicyRequestStatus(univ.Enumerated):
    pass


PolicyRequestStatus.namedValues = namedval.NamedValues(
    ('unsent', 0),
    ('noAnswer', 1),
    ('failure', 2)
)


class PolicyRequestType(univ.Enumerated):
    pass


PolicyRequestType.namedValues = namedval.NamedValues(
    ('start', 0),
    ('interim', 1),
    ('stop', 2)
)


class PolicyResultCode(univ.Integer):
    pass


class PolicyControlFailureReport(univ.Sequence):
    pass


PolicyControlFailureReport.componentType = namedtype.NamedTypes(
    namedtype.NamedType('requestType', PolicyRequestType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('requestStatus', PolicyRequestStatus().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('resultCode', PolicyResultCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('stopTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5)))
)


class PolicyControlInfo(univ.Sequence):
    pass


PolicyControlInfo.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('policyControlFailureReport', PolicyControlFailureReport().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.OptionalNamedType('pcsRealm', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('policyControlSessionId', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(1, 255)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7)))
)


class URI(univ.Sequence):
    pass


URI.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('count', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('uri', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('uriIdentifier', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('uriDataVolumeUplink', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('uriDataVolumeDownlink', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('listOfUriTimeStamps', univ.SetOf(componentType=TimeStamp()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6)))
)


class ServiceContainer(univ.Sequence):
    pass


ServiceContainer.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ratingGroup', RatingGroupId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('serviceIdentifier', ServiceIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('method', ActiveTimeMethod().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('inactivity', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('resolution', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('ccRequestNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('serviceSpecificUnits', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('listOfURI', univ.SequenceOf(componentType=URI()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9)))
)


class TimeReport(univ.Sequence):
    pass


TimeReport.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ratingGroup', RatingGroupId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('startTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('endTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('dataVolumeUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('dataVolumeDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5)))
)


class GprsCdrExtensions(univ.Set):
    pass


GprsCdrExtensions.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('creditControlInfo', CreditControlInfo().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2))),
    namedtype.OptionalNamedType('policyControlInfo', PolicyControlInfo().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 3))),
    namedtype.OptionalNamedType('userCategory', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('ruleSpaceId', char.IA5String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('serviceContainers', univ.SequenceOf(componentType=ServiceContainer()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('timeReports', univ.SequenceOf(componentType=TimeReport()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))
)


class ManagementExtension(univ.Sequence):
    pass


ManagementExtension.componentType = namedtype.NamedTypes(
    namedtype.NamedType('identifier', univ.ObjectIdentifier()),
    namedtype.DefaultedNamedType('significance', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)).subtype(value=1)),
    namedtype.NamedType('information', GprsCdrExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 2)))
)


class ManagementExtensions(univ.SetOf):
    pass


ManagementExtensions.componentType = ManagementExtension()


class NodeID(char.IA5String):
    pass


NodeID.subtypeSpec = constraint.ValueSizeConstraint(1, 20)


class MSTimeZone(univ.OctetString):
    pass


MSTimeZone.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class IMSI(TBCD_STRING):
    pass


class EGSNPDPRecord(univ.Set):
    pass


EGSNPDPRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('ggsnAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.OptionalNamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('sgsnAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('recordExtensions', ManagementExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.OptionalNamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('iMSsignalingContext', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 25))),
    namedtype.OptionalNamedType('sgsnPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 28))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('listOfServiceData', univ.SequenceOf(componentType=ThreeGChangeOfServiceCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34)))
)


class GGSNPDPRecord(univ.Set):
    pass


GGSNPDPRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('ggsnAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.OptionalNamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('sgsnAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('recordExtensions', ManagementExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.OptionalNamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('iMSsignalingContext', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 25))),
    namedtype.OptionalNamedType('sgsnPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32)))
)


class ServingNodeType(univ.Enumerated):
    pass


ServingNodeType.namedValues = namedval.NamedValues(
    ('sGSN', 0),
    ('pMIPSGW', 1),
    ('gTPSGW', 2),
    ('ePDG', 3),
    ('hSGW', 4),
    ('mME', 5),
    ('tWAN', 6)
)


class PGWRecord(univ.Set):
    pass


PGWRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('p-GWAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.NamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('servingNodeAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpPDNType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPPDNAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.NamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.NamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.NamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('recordExtensions', ManagementExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.NamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.NamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('iMSsignalingContext', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 25))),
    namedtype.OptionalNamedType('servingNodePLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 28))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('listOfServiceData', univ.SequenceOf(componentType=ChangeOfServiceCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34))),
    namedtype.NamedType('servingNodeType', univ.SequenceOf(componentType=ServingNodeType()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 35))),
    namedtype.OptionalNamedType('p-GWPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 37))),
    namedtype.OptionalNamedType('startTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 38))),
    namedtype.OptionalNamedType('stopTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 39))),
    namedtype.OptionalNamedType('pDNConnectionID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 41))),
    namedtype.OptionalNamedType('servedPDPPDNAddressExt', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 45)))
)


class SGWChange(univ.Boolean):
    pass


class SGWRecord(univ.Set):
    pass


SGWRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.OptionalNamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('s-GWAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.NamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('servingNodeAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpPDNType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPPDNAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.NamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.NamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.NamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.NamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('servingNodePLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('sGWChange', SGWChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34))),
    namedtype.OptionalNamedType('servingNodeType', univ.SequenceOf(componentType=ServingNodeType()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 35))),
    namedtype.OptionalNamedType('p-GWAddressUsed', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 36))),
    namedtype.OptionalNamedType('p-GWPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 37))),
    namedtype.OptionalNamedType('pDNConnectionID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 40))),
    namedtype.OptionalNamedType('iMSIunauthenticatedFlag', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 41))),
    namedtype.OptionalNamedType('servedPDPPDNAddressExt', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 43))),
    namedtype.OptionalNamedType('s-GWiPv6Address', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 48))),
    namedtype.OptionalNamedType('servingNodeiPv6Address', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 49))),
    namedtype.OptionalNamedType('p-GWiPv6AddressUsed', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 50)))
)


class GPRSRecord(univ.Choice):
    pass


GPRSRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ggsnPDPRecord', GGSNPDPRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 21))),
    namedtype.NamedType('egsnPDPRecord', EGSNPDPRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 70))),
    namedtype.NamedType('sGWRecord', SGWRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 78))),
    namedtype.NamedType('pgwRecord', PGWRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 79)))
)

