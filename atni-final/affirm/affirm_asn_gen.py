# Auto-generated by asn1ate v.0.6.0 from lte.asn
# (last modified on 2018-01-02 20:58:51.318604)

from pyasn1.type import univ, char, namedtype, namedval, tag, constraint, useful


class APNSelectionMode(univ.Enumerated):
    pass


APNSelectionMode.namedValues = namedval.NamedValues(
    ('mSorNetworkProvidedSubscriptionVerified', 0),
    ('mSProvidedSubscriptionNotVerified', 1),
    ('networkProvidedSubscriptionNotVerified', 2)
)


class AccessPointNameNI(char.IA5String):
    pass


AccessPointNameNI.subtypeSpec = constraint.ValueSizeConstraint(1, 63)


class AccessPointNameOI(char.IA5String):
    pass


AccessPointNameOI.subtypeSpec = constraint.ValueSizeConstraint(1, 37)
maxAddressLength = univ.Integer(20)


class AddressString(univ.OctetString):
    pass


AddressString.subtypeSpec = constraint.ValueSizeConstraint(1, maxAddressLength)


class CAMELAccessPointNameNI(AccessPointNameNI):
    pass


class CAMELAccessPointNameOI(AccessPointNameOI):
    pass


class NumberOfDPEncountered(univ.Integer):
    pass


class SCFAddress(AddressString):
    pass


class ServiceKey(univ.Integer):
    pass


ServiceKey.subtypeSpec = constraint.ValueRangeConstraint(0, 2147483647)


class FreeFormatData(univ.OctetString):
    pass


FreeFormatData.subtypeSpec = constraint.ValueSizeConstraint(1, 160)


class FFDAppendIndicator(univ.Boolean):
    pass


class DefaultGPRS_Handling(univ.Enumerated):
    pass


DefaultGPRS_Handling.namedValues = namedval.NamedValues(
    ('continueTransaction', 0),
    ('releaseTransaction', 1)
)


class LevelOfCAMELService(univ.BitString):
    pass


LevelOfCAMELService.namedValues = namedval.NamedValues(
    ('basic', 0),
    ('callDurationSupervision', 1),
    ('onlineCharging', 2)
)


class CAMELInformationPDP(univ.Set):
    pass


CAMELInformationPDP.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('sCFAddress', SCFAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('serviceKey', ServiceKey().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('defaultTransactionHandling', DefaultGPRS_Handling().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('cAMELAccessPointNameNI', CAMELAccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('cAMELAccessPointNameOI', CAMELAccessPointNameOI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('numberOfDPEncountered', NumberOfDPEncountered().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('levelOfCAMELService', LevelOfCAMELService().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('freeFormatData', FreeFormatData().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('fFDAppendIndicator', FFDAppendIndicator().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9)))
)


class CSGAccessMode(univ.Enumerated):
    pass


CSGAccessMode.namedValues = namedval.NamedValues(
    ('closedMode', 0),
    ('hybridMode', 1)
)


class CSGId(univ.OctetString):
    pass


CSGId.subtypeSpec = constraint.ValueSizeConstraint(0, 4)


class CallDuration(univ.Integer):
    pass


class CallEventRecordType(univ.Integer):
    pass


CallEventRecordType.namedValues = namedval.NamedValues(
    ('ggsnPDPRecord', 19),
    ('egsnPDPRecord', 70)
)


class CauseForRecClosing(univ.Integer):
    pass


CauseForRecClosing.namedValues = namedval.NamedValues(
    ('normalRelease', 0),
    ('abnormalRelease', 4),
    ('cAMELInitCallRelease', 5),
    ('volumeLimit', 16),
    ('timeLimit', 17),
    ('servingNodeChange', 18),
    ('maxChangeCond', 19),
    ('managementIntervention', 20),
    ('intraSGSNIntersystemChange', 21),
    ('rATChange', 22),
    ('mSTimeZoneChange', 23),
    ('sGSNPLMNIDChange', 24),
    ('unauthorizedRequestingNetwork', 52),
    ('unauthorizedLCSClient', 53),
    ('positionMethodFailure', 54),
    ('unknownOrUnreachableLCSClient', 58),
    ('listofDownstreamNodeChange', 59)
)


class CellId(univ.OctetString):
    pass


CellId.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class ChChSelectionMode(univ.Enumerated):
    pass


ChChSelectionMode.namedValues = namedval.NamedValues(
    ('servingNodeSupplied', 0),
    ('subscriptionSpecific', 1),
    ('aPNSpecific', 2),
    ('homeDefault', 3),
    ('roamingDefault', 4),
    ('visitingDefault', 5),
    ('aAASupplied', 6),
    ('gGSNOverride', 7)
)


class ChangeCondition(univ.Enumerated):
    pass


ChangeCondition.namedValues = namedval.NamedValues(
    ('qoSChange', 0),
    ('tariffTime', 1),
    ('recordClosure', 2),
    ('failureHandlingContinueOngoing', 3),
    ('failureHandlingRetryandTerminateOngoing', 4),
    ('failureHandlingTerminateOngoing', 5),
    ('cGI-SAICHange', 6),
    ('rAIChange', 7),
    ('dT-Establishment', 8),
    ('dT-Removal', 9),
    ('eCGIChange', 10),
    ('tAIChange', 11),
    ('userLocationChange', 12),
    ('apnAmbrChange', 50)
)


class FailureHandlingContinue(univ.Boolean):
    pass


class DataVolumeGPRS(univ.Integer):
    pass


class TimeStamp(univ.OctetString):
    pass


TimeStamp.subtypeSpec = constraint.ValueSizeConstraint(9, 9)


class EPCQoSInformation(univ.Sequence):
    pass


EPCQoSInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('qCI', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('maxRequestedBandwithUL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('maxRequestedBandwithDL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('guaranteedBitrateUL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('guaranteedBitrateDL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('aRP', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('aPNAggregateMaxBitrateUL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('aPNAggregateMaxBitrateDL', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8)))
)


class QoSInformation(univ.OctetString):
    pass


QoSInformation.subtypeSpec = constraint.ValueSizeConstraint(4, 15)


class ChangeOfCharCondition(univ.Sequence):
    pass


ChangeOfCharCondition.componentType = namedtype.NamedTypes(
    namedtype.OptionalNamedType('qosRequested', QoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('qosNegotiated', QoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('dataVolumeGPRSUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('dataVolumeGPRSDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.NamedType('changeCondition', ChangeCondition().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('changeTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('failureHandlingContinue', FailureHandlingContinue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('ePCQoSInformation', EPCQoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9)))
)


class IPTextRepresentedAddress(univ.Choice):
    pass


IPTextRepresentedAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPTextV4Address', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(7, 15)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.NamedType('iPTextV6Address', char.IA5String().subtype(subtypeSpec=constraint.ValueSizeConstraint(15, 45)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3)))
)


class IPBinaryAddress(univ.Choice):
    pass


IPBinaryAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPBinV4Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(4, 4)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('iPBinV6Address', univ.OctetString().subtype(subtypeSpec=constraint.ValueSizeConstraint(16, 16)).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class IPAddress(univ.Choice):
    pass


IPAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPBinaryAddress', IPBinaryAddress()),
    namedtype.NamedType('iPTextRepresentedAddress', IPTextRepresentedAddress())
)


class GSNAddress(IPAddress):
    pass


class RatingGroupId(univ.Integer):
    pass


class LocalSequenceNumber(univ.Integer):
    pass


LocalSequenceNumber.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class PSFurnishChargingInformation(univ.Sequence):
    pass


PSFurnishChargingInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('pSFreeFormatData', FreeFormatData().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
        namedtype.OptionalNamedType('pSFFDAppendIndicator', FFDAppendIndicator().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class ServiceIdentifier(univ.Integer):
    pass


ServiceIdentifier.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class ChargingRuleBaseName(char.IA5String):
    pass


ChargingRuleBaseName.subtypeSpec = constraint.ValueSizeConstraint(1, 63)


class ResultCode(univ.Integer):
    pass


class ServiceConditionChange(univ.BitString):
    pass


ServiceConditionChange.namedValues = namedval.NamedValues(
    ('qoSChange', 0),
    ('sGSNChange', 1),
    ('sGSNPLMNIDChange', 2),
    ('tariffTimeSwitch', 3),
    ('pDPContextRelease', 4),
    ('rATChange', 5),
    ('serviceIdledOut', 6),
    ('reserved1', 7),
    ('configurationChange', 8),
    ('serviceStop', 9),
    ('dCCATimeThresholdReached', 10),
    ('dCCAVolumeThresholdReached', 11),
    ('dCCAServiceSpecificUnitThresholdReached', 12),
    ('dCCATimeExhausted', 13),
    ('dCCAVolumeExhausted', 14),
    ('dCCAValidityTimeout', 15),
    ('reserved2', 16),
    ('dCCAReauthorisationRequest', 17),
    ('dCCAContinueOngoingSession', 18),
    ('dCCARetryAndTerminateOngoingSession', 19),
    ('dCCATerminateOngoingSession', 20),
    ('cGI-SAIChange', 21),
    ('rAIChange', 22),
    ('dCCAServiceSpecificUnitExhausted', 23),
    ('recordClosure', 24),
    ('timeLimit', 25),
    ('volumeLimit', 26),
    ('serviceSpecificUnitLimit', 27),
    ('envelopeClosure', 28),
    ('eCGIChange', 29),
    ('tAIChange', 30),
    ('userLocationChange', 31)
)


class ChangeOfServiceCondition(univ.Sequence):
    pass


ChangeOfServiceCondition.componentType = namedtype.NamedTypes(
    namedtype.NamedType('ratingGroup', RatingGroupId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('chargingRuleBaseName', ChargingRuleBaseName().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2))),
    namedtype.OptionalNamedType('resultCode', ResultCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('timeOfFirstUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('timeOfLastUsage', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('timeUsage', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.NamedType('serviceConditionChange', ServiceConditionChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('qoSInformationNeg', EPCQoSInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('servingNodeAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 10))),
    namedtype.OptionalNamedType('datavolumeFBCUplink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('datavolumeFBCDownlink', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('timeOfReport', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('failureHandlingContinue', FailureHandlingContinue().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 16))),
    namedtype.OptionalNamedType('serviceIdentifier', ServiceIdentifier().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 18))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20)))
)


class ChargingCharacteristics(univ.OctetString):
    pass


ChargingCharacteristics.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class ChargingID(univ.Integer):
    pass


ChargingID.subtypeSpec = constraint.ValueRangeConstraint(0, 4294967295)


class Diagnostics(univ.Choice):
    pass


Diagnostics.componentType = namedtype.NamedTypes(
    namedtype.NamedType('gsm0408Cause', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)))
)


class Diagnostics(univ.Choice):
    pass


Diagnostics.componentType = namedtype.NamedTypes(
    namedtype.NamedType('gsm0408Cause', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0)))
)


class DynamicAddressFlag(univ.Boolean):
    pass


class ETSIAddress(AddressString):
    pass


class FFDAppendIndicator(univ.Boolean):
    pass


class FreeFormatData(univ.OctetString):
    pass


FreeFormatData.subtypeSpec = constraint.ValueSizeConstraint(1, 160)


class PDPType(univ.OctetString):
    pass


PDPType.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class ISDN_AddressString(univ.OctetString):
    pass


class MSISDN(ISDN_AddressString):
    pass


class PLMN_Id(univ.OctetString):
    pass


PLMN_Id.subtypeSpec = constraint.ValueSizeConstraint(3, 3)


class PDPAddress(univ.Choice):
    pass


PDPAddress.componentType = namedtype.NamedTypes(
    namedtype.NamedType('iPAddress', IPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 0))),
    namedtype.NamedType('eTSIAddress', ETSIAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class RATType(univ.Integer):
    pass


RATType.subtypeSpec = constraint.ValueRangeConstraint(0, 255)


class NetworkInitiatedPDPContext(univ.Boolean):
    pass


class TBCDSTRING(univ.OctetString):
    pass


class IMEI(TBCDSTRING):
    pass


class NodeID(char.IA5String):
    pass


NodeID.subtypeSpec = constraint.ValueSizeConstraint(1, 20)


class MSTimeZone(univ.OctetString):
    pass


MSTimeZone.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class IMSI(TBCDSTRING):
    pass


class GGSNPDPRecord(univ.Set):
    pass


GGSNPDPRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', CallEventRecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.OptionalNamedType('networkInitiation', NetworkInitiatedPDPContext().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('ggsnAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.OptionalNamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.OptionalNamedType('sgsnAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.OptionalNamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.OptionalNamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('diagnostics', Diagnostics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 16))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.OptionalNamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('sgsnPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('listOfServiceData', univ.SequenceOf(componentType=ChangeOfServiceCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34)))
)


class RecordType(univ.Integer):
    pass


RecordType.namedValues = namedval.NamedValues(
    ('sgsnPDPRecord', 18),
    ('pGWRecord', 85)
)


class SubscriptionIDType(univ.Enumerated):
    pass


SubscriptionIDType.namedValues = namedval.NamedValues(
    ('eND-USER-E164', 0),
    ('eND-USER-IMSI', 1),
    ('eND-USER-SIP-URI', 2),
    ('eND-USER-NAI', 3),
    ('eND-USER-PRIVATE', 4)
)


class SubscriptionID(univ.Set):
    pass


SubscriptionID.componentType = namedtype.NamedTypes(
    namedtype.NamedType('subscriptionIDType', SubscriptionIDType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('subscriptionIDData', char.UTF8String().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class ServingNodeType(univ.Enumerated):
    pass


ServingNodeType.namedValues = namedval.NamedValues(
    ('sGSN', 0),
    ('pMIPSGW', 1),
    ('gTPSGW', 2),
    ('ePDG', 3),
    ('hSGW', 4),
    ('mME', 5)
)


class PGWRecord(univ.Set):
    pass


PGWRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('p-GWAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.NamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('servingNodeAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpPDNType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPPDNAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.NamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.NamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('diagnostics', Diagnostics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 16))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.NamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('servingNodePLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('pSFurnishChargingInformation', PSFurnishChargingInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 28))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('listOfServiceData', univ.SequenceOf(componentType=ChangeOfServiceCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34))),
    namedtype.NamedType('servingNodeType', univ.SequenceOf(componentType=ServingNodeType()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 35))),
    namedtype.OptionalNamedType('servedMNNAI', SubscriptionID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 36))),
    namedtype.OptionalNamedType('p-GWPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 37))),
    namedtype.OptionalNamedType('startTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 38))),
    namedtype.OptionalNamedType('stopTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 39))),
    namedtype.OptionalNamedType('pDNConnectionID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 41))),
    namedtype.OptionalNamedType('servedPDPPDNAddressExt', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 45)))
)


class SGWChange(univ.Boolean):
    pass


class UserCSGInformation(univ.Sequence):
    pass


UserCSGInformation.componentType = namedtype.NamedTypes(
    namedtype.NamedType('cSGId', CSGId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('cSGAccessMode', CSGAccessMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.OptionalNamedType('cSGMembershipIndication', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class ManagementExtension(univ.Sequence):
    pass


ManagementExtension.componentType = namedtype.NamedTypes(
    namedtype.NamedType('identifier', univ.ObjectIdentifier()),
    namedtype.DefaultedNamedType('significance', univ.Boolean().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)).subtype(value=0)),
    namedtype.NamedType('information', univ.Any().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 2)))
)


class ManagementExtensions(univ.SetOf):
    pass


ManagementExtensions.componentType = ManagementExtension()


class SGWRecord(univ.Set):
    pass


SGWRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.NamedType('s-GWAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 4))),
    namedtype.NamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 5))),
    namedtype.NamedType('servingNodeAddress', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('pdpPDNType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('servedPDPPDNAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 9))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 11))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.NamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 14))),
    namedtype.NamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.OptionalNamedType('diagnostics', Diagnostics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 16))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.OptionalNamedType('recordExtensions', ManagementExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 20))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.NamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('iMSsignalingContext', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 25))),
    namedtype.OptionalNamedType('servingNodePLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.OptionalNamedType('servedIMEISV', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 30))),
    namedtype.OptionalNamedType('mSTimeZone', MSTimeZone().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('userLocationInformation', univ.OctetString().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('sGWChange', SGWChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 34))),
    namedtype.NamedType('servingNodeType', univ.SequenceOf(componentType=ServingNodeType()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 35))),
    namedtype.OptionalNamedType('p-GWAddressUsed', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 36))),
    namedtype.OptionalNamedType('p-GWPLMNIdentifier', PLMN_Id().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 37))),
    namedtype.OptionalNamedType('startTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 38))),
    namedtype.OptionalNamedType('stopTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 39))),
    namedtype.OptionalNamedType('pDNConnectionID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 40))),
    namedtype.OptionalNamedType('userCSGInformation', UserCSGInformation().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 42))),
    namedtype.OptionalNamedType('servedPDPPDNAddressExt', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 43))),
    namedtype.OptionalNamedType('lowAccessPriorityIndicator', univ.Null().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 44))),
    namedtype.OptionalNamedType('dynamicAddressFlagExt', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 47))),
    namedtype.OptionalNamedType('s-GWiPv6Address', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 48))),
    namedtype.OptionalNamedType('servingNodeiPv6Address', univ.SequenceOf(componentType=GSNAddress()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 49))),
    namedtype.OptionalNamedType('p-GWiPv6AddressUsed', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 50)))
)


class LocationAreaCode(univ.OctetString):
    pass


LocationAreaCode.subtypeSpec = constraint.ValueSizeConstraint(2, 2)


class RoutingAreaCode(univ.OctetString):
    pass


RoutingAreaCode.subtypeSpec = constraint.ValueSizeConstraint(1, 1)


class SGSNChange(univ.Boolean):
    pass


class MSNetworkCapability(univ.OctetString):
    pass


MSNetworkCapability.subtypeSpec = constraint.ValueSizeConstraint(1, 8)


class SGSNPDPRecord(univ.Set):
    pass


SGSNPDPRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('recordType', RecordType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.OptionalNamedType('networkInitiation', NetworkInitiatedPDPContext().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1))),
    namedtype.NamedType('servedIMSI', IMSI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 3))),
    namedtype.OptionalNamedType('servedIMEI', IMEI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 4))),
    namedtype.OptionalNamedType('sgsnAddress', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 5))),
    namedtype.OptionalNamedType('msNetworkCapability', MSNetworkCapability().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 6))),
    namedtype.OptionalNamedType('routingArea', RoutingAreaCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 7))),
    namedtype.OptionalNamedType('locationAreaCode', LocationAreaCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 8))),
    namedtype.OptionalNamedType('cellIdentifier', CellId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 9))),
    namedtype.NamedType('chargingID', ChargingID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 10))),
    namedtype.NamedType('ggsnAddressUsed', GSNAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 11))),
    namedtype.OptionalNamedType('accessPointNameNI', AccessPointNameNI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 12))),
    namedtype.OptionalNamedType('pdpType', PDPType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 13))),
    namedtype.OptionalNamedType('servedPDPAddress', PDPAddress().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 14))),
    namedtype.OptionalNamedType('listOfTrafficVolumes', univ.SequenceOf(componentType=ChangeOfCharCondition()).subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 15))),
    namedtype.NamedType('recordOpeningTime', TimeStamp().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 16))),
    namedtype.NamedType('duration', CallDuration().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 17))),
    namedtype.OptionalNamedType('sgsnChange', SGSNChange().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 18))),
    namedtype.NamedType('causeForRecClosing', CauseForRecClosing().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 19))),
    namedtype.OptionalNamedType('diagnostics', Diagnostics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 20))),
    namedtype.OptionalNamedType('recordSequenceNumber', univ.Integer().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 21))),
    namedtype.OptionalNamedType('nodeID', NodeID().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 22))),
    namedtype.OptionalNamedType('recordExtensions', ManagementExtensions().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 23))),
    namedtype.OptionalNamedType('localSequenceNumber', LocalSequenceNumber().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 24))),
    namedtype.OptionalNamedType('apnSelectionMode', APNSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 25))),
    namedtype.OptionalNamedType('accessPointNameOI', AccessPointNameOI().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 26))),
    namedtype.OptionalNamedType('servedMSISDN', MSISDN().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 27))),
    namedtype.NamedType('chargingCharacteristics', ChargingCharacteristics().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 28))),
    namedtype.OptionalNamedType('rATType', RATType().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 29))),
    namedtype.OptionalNamedType('cAMELInformationPDP', CAMELInformationPDP().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 30))),
    namedtype.OptionalNamedType('rNCUnsentDownlinkVolume', DataVolumeGPRS().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 31))),
    namedtype.OptionalNamedType('chChSelectionMode', ChChSelectionMode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 32))),
    namedtype.OptionalNamedType('dynamicAddressFlag', DynamicAddressFlag().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 33)))
)


class GPRSRecord(univ.Choice):
    pass


GPRSRecord.componentType = namedtype.NamedTypes(
    namedtype.NamedType('sgsnPDPRecord', SGSNPDPRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 20))),
    namedtype.NamedType('ggsnPDPRecord', GGSNPDPRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 21))),
    namedtype.NamedType('sGWRecord', SGWRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 78))),
    namedtype.NamedType('pgwRecord', PGWRecord().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatConstructed, 79)))
)


class ISDN_AddressString(univ.OctetString):
    pass


class LocationAreaAndCell(univ.Sequence):
    pass


LocationAreaAndCell.componentType = namedtype.NamedTypes(
    namedtype.NamedType('locationAreaCode', LocationAreaCode().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 0))),
    namedtype.NamedType('cellId', CellId().subtype(implicitTag=tag.Tag(tag.tagClassContext, tag.tagFormatSimple, 1)))
)


class NetworkInitiatedPDPContext(univ.Boolean):
    pass


class PositionMethodFailure_Diagnostic(univ.Enumerated):
    pass


PositionMethodFailure_Diagnostic.namedValues = namedval.NamedValues(
    ('congestion', 0),
    ('insufficientResources', 1),
    ('insufficientMeasurementData', 2),
    ('inconsistentMeasurementData', 3),
    ('locationProcedureNotCompleted', 4),
    ('locationProcedureNotSupportedByTargetMS', 5),
    ('qoSNotAttainable', 6),
    ('positionMethodNotAvailableInNetwork', 7),
    ('positionMethodNotAvailableInLocationArea', 8)
)


class QoSInformation(univ.OctetString):
    pass


QoSInformation.subtypeSpec = constraint.ValueSizeConstraint(4, 30)


class UnauthorizedLCSClient_Diagnostic(univ.Enumerated):
    pass


UnauthorizedLCSClient_Diagnostic.namedValues = namedval.NamedValues(
    ('noAdditionalInformation', 0),
    ('clientNotInMSPrivacyExceptionList', 1),
    ('callToClientNotSetup', 2),
    ('privacyOverrideNotApplicable', 3),
    ('disallowedByLocalRegulatoryRequirements', 4),
    ('unauthorizedPrivacyClass', 5),
    ('unauthorizedCallSessionUnrelatedExternalClient', 6),
    ('unauthorizedCallSessionRelatedExternalClient', 7)
)
